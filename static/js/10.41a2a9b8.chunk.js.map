{"version":3,"sources":["utils/objects.js","utils/hooksLib.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/VisibilityOff.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","pages/auth/SignIn.js"],"names":["setProperty","obj","path","value","schema","pList","split","len","length","i","elem","useFormFields","initialState","fields","setValues","useState","event","newFields","key","target","id","name","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","InputAdornment","props","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","Provider","_extends","clsx","root","positionEnd","positionStart","hiddenLabel","filled","margin","marginDense","Typography","color","withStyles","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","Button","styled","MuiButton","spacing","Wrapper","Paper","theme","breakpoints","up","connect","state","error","auth","_ref","loading","setLoading","showPassword","setShowPassword","handleFieldChange","username","password","history","useHistory","Grid","container","direction","justify","item","Logo","logo","padding","width","onSubmit","push","FormControl","fullWidth","TextField","autoComplete","label","autoFocus","onChange","InputLabel","htmlFor","Input","type","endAdornment","IconButton","onClick","handleTogglePasswordVisibility","prevShowPassword","edge","Visibility","VisibilityOff","md","style","Divider","align","Link","href"],"mappings":"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","file":"static/js/10.41a2a9b8.chunk.js","sourcesContent":["export function setProperty(obj, path, value) {\n  let schema = obj;\n  const pList = path.split('.');\n  const len = pList.length;\n  for(let i = 0; i < len-1; i++) {\n    const elem = pList[i];\n    if( !schema[elem] ) schema[elem] = {}\n    schema = schema[elem];\n  }\n\n  schema[pList[len-1]] = value;\n}\n\nexport function getProperty(obj, path) {\n  let schema = obj;\n  const pList = path.split('.');\n  const len = pList.length;\n  for(let i = 0; i < len; i++) {\n    const elem = pList[i];\n    if(schema === undefined) return null;\n    schema = schema[elem];\n  }\n\n  return schema;\n}\n\n// const obj = {\n//   'someProp.0.nestedProp1': \"\",\n//   'someProp.0.nestedProp2': \"\",\n//   'someProp.1.nestedProp1': \"\",\n// }\n//\n// deletePath(obj, 'someProp.0')\n//\n// expected obj = {\n//   'someProp.1.nestedProp1': \"\",\n// }\nexport function deleteKeysWithStart(obj, startsWith) {\n  Object.keys(obj).forEach(key => {\n    if(key.startsWith(startsWith)){\n      delete obj[key];\n    }\n  })\n}\n\nexport const removeNotIncluded = (object, allowedKeys) => {\n  const objectKeys = Object.keys(object);\n  objectKeys.forEach(\n    key => {\n      if(!(allowedKeys.includes(key))){\n        delete object[key];\n      }\n    }\n  )\n  return object;\n};\n\n\nconst isAValue = ([key, value]) => {\n  if(key === 'custom_fields'){\n    return value.some(customField => customField.value)\n  }\n\n  if(value === false || value === 0) {\n    return true; //  false and 0 are values.\n  }\n\n  if(!value) {\n    return false;  //  value is null or undefined\n  }\n\n  if(value.constructor === Object) {\n    return Object.entries(value).length > 0\n  }\n\n  if(value.constructor === Array) {\n    if(value.length > 0) {\n      return value.some(hasSomeValue)\n    } else {\n      return false\n    }\n  }\n\n  return true;  // value is string, number, timestamp, etc\n};\n\nconst hasSomeValue = obj => {\n  const objectEntries = Object.entries(obj);\n\n  if(objectEntries.length === 0) return false;\n\n  return objectEntries.some(isAValue);\n}\n\n// params: array of objects { key: value }\n// return a new array, without the empty values objects like { a: '' , b: ''}\n// example: \n//   param = [{a: 1}, {b: ''}, {c: '', d: 'hola'}]\n//   clearEmptyHashOfArray(param)\n// result = [{a: 1}, {c: '', d: 'hola'}]\nexport const clearEmptyHashOfArray = (array) => {\n  return array.filter(hasSomeValue)\n}\n\nexport const toPlainObject = draft => (\n  JSON.parse(JSON.stringify(draft))\n)\n\nexport const objectValuesAreNotEmpty = object => {\n  return Object.values(object).every(value => Boolean(value))\n}","import { useState, useReducer, useMemo } from \"react\";\nimport {deleteKeysWithStart, getProperty, setProperty} from \"./objects\";\nimport store from \"../redux/store\";\nimport {setFormStatus} from \"../redux/actions/formsActions\";\nimport {produce} from 'immer';\nimport {trimChar} from \"./strings\";\n\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n  return [\n    fields,\n    //  handleFieldChange\n    function(event) {\n      const newFields = {...fields};\n\n      const path = event.key || event.target.id || event.target.name;\n      const value = event.target ? event.target.value : event.value;\n      setProperty(newFields, path, value);\n\n      setValues({\n        ...newFields\n      });\n    },\n    //  reset\n    function() {\n      setValues(initialState);\n    }\n  ];\n}\nfunction findValidator(fieldName, validators) {\n  const properties = fieldName.split('.');\n  let validator = null;\n  const indexes = [];\n  const isRootField = properties.length === 1;\n  properties.forEach(\n    property => {\n      if(!isNaN(property)){\n        indexes.push(parseInt(property));\n      }\n      if (validator) {\n        const subValidator = validator[property];\n        if (subValidator) {\n          validator = subValidator;\n        }\n        return\n      }\n\n      const rootValidator = validators[property];\n      const isFunction = rootValidator instanceof Function;\n      //  Avoid assign root validator to nested fields\n      if(!isFunction || (isFunction && isRootField)){\n        validator = validators[property];\n      }\n    }\n  );\n  return {validator, indexes};\n}\n\nfunction validate(fieldName, fields, validators, fieldValue=undefined, extraArgs={}, initialState) {\n  const {validator, indexes} = findValidator(fieldName, validators);\n  let error;\n  if (validator && validator instanceof Function) {\n    const valueIndex = indexes[indexes.length - 1];\n    let value;\n    if(fieldValue === undefined) {\n      value = getProperty(fields, fieldName);\n    } else {\n      value = fieldValue;\n    }\n    const initialValue = getProperty(initialState, fieldName);\n    const validatorArgs = {value, fields, valueIndex, indexes, initialValue, ...extraArgs};\n    error = validator(validatorArgs);\n  }\n  if (error) {\n    fields.errors[fieldName] = error;\n  } else {\n    delete fields.errors[fieldName];\n  }\n}\nconst formReducer = ({validators, initialState, emptyInitialState}) => function (draft, action) {\n  function runValidators(fields, previousKey=\"\") {\n    for (let key in fields) {\n      if(key === \"errors\") continue;\n\n      const value = fields[key];\n\n      if (value instanceof Object){ // Also applies for Arrays\n        runValidators(value, `${previousKey}.${key}`)\n      } else {\n        const fieldName = `${previousKey}.${key}`;\n        validate(trimChar(fieldName, \".\"), draft, validators, undefined, action.extraArgs, initialState);\n      }\n    }\n  }\n  switch (action.type) {\n    case 'FIELD_CHANGE': {\n      validate(action.fieldName, draft, validators, action.fieldValue, {}, initialState);\n      setProperty(draft, action.fieldName, action.fieldValue);\n      if(action.callback) action.callback(draft);\n      if(!draft.dirty && action.fieldValue?.length>0) {\n        store.dispatch(setFormStatus({model: draft.formModel, dirty: true}));\n        draft.dirty = true;\n      }\n      return;\n    }\n    case 'ADD_EMPTY_FIELD': {\n      const path = action.path;\n      let sample;\n      if (action.sample){\n        sample = action.sample;\n      } else {\n        sample = getProperty(emptyInitialState || initialState, path)[0];\n      }\n      getProperty(draft, path).push({...sample});\n      return;\n    }\n    case 'REMOVE_FIELD': {\n      const { path, index } = action;\n      getProperty(draft, path).splice(index, 1);\n      deleteKeysWithStart(draft.errors, `${path}.${index}`);\n      return;\n    }\n\n    case 'SUBMIT':\n      if (action.preValidator){\n        const {fieldName, fieldValue} = action.preValidator(draft)\n        setProperty(draft, fieldName, fieldValue);\n      }\n      runValidators(draft);\n\n      if(Object.keys(draft.errors).length === 0){\n        action.handleSubmit(draft);\n        store.dispatch(setFormStatus({model: draft.formModel, dirty: false}));\n        draft.dirty = false;\n      }\n      return;\n    default:\n  }\n}\n\nexport function useFormReducer({initialState, emptyInitialState, validators = {}}){\n  const memoizedInitialState = useMemo(\n    () => ({\n      ...initialState,\n      errors: {}\n    }),\n    []\n  );\n\n  const curriedFormReducer = useMemo(\n    () => {\n      return produce(formReducer({validators, initialState: memoizedInitialState, emptyInitialState}))\n    },\n    [memoizedInitialState]\n  );\n  const [state, dispatch] = useReducer(curriedFormReducer, memoizedInitialState);\n\n  const handleFieldChange = (e) => {\n    let fieldName, fieldValue;\n    const {target, key, value, callback, initialValue} = e;\n    if(target){\n      fieldName = e.target.name || e.target.id;\n      fieldValue = e.target.value;\n    } else {\n      fieldName = key;\n      fieldValue = value;\n    }\n\n    dispatch({\n      type: 'FIELD_CHANGE',\n      fieldName,\n      fieldValue,\n      callback,\n      initialValue\n    })\n  };\n\n  const addEmptyItem = (path, sample=null) => {\n    dispatch({\n      type: 'ADD_EMPTY_FIELD',\n      path,\n      sample\n    })\n  };\n\n  const removeItem = (path, index) => {\n    dispatch({\n      type: 'REMOVE_FIELD',\n      path,\n      index\n    })\n  };\n\n  const submit = (handleSubmit, preValidator=null, extraArgs) => {\n    dispatch({\n      type: 'SUBMIT',\n      handleSubmit,\n      preValidator,\n      extraArgs\n    })\n  };\n\n  const hasErrors = Object.keys(state.errors).length > 0;\n\n  return {fields: state, dispatch, hasErrors, submit, handleFieldChange, addEmptyItem, removeItem};\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  FormControl,\r\n  Button as MuiButton,\r\n  Paper,\r\n  Link,\r\n  InputAdornment,\r\n  IconButton,\r\n  InputLabel,\r\n  Input\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {useFormFields} from \"../../utils/hooksLib\";\r\nimport {AuthService} from \"../../services/AuthService\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { connect } from \"react-redux\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AuthErrors from \"./AuthErrors\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Logo} from \"../components/Logo\";\r\nimport logo from \"../../images/Logo.png\";\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { useHistory } from 'react-router-dom'; // For navigation in react-router-dom v5\r\n\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst Wrapper = styled(Paper)`\r\n  position: relative;\r\n  padding: ${props => props.theme.spacing(6)}px;\r\n  background: rgba(255, 255, 255, 0.2); /* semi-transparent background to apply the blur */\r\n  backdrop-filter: blur(20px); /* Apply blur effect */\r\n  border-radius: 15px;\r\n\r\n  ${props => props.theme.breakpoints.up(\"md\")} {\r\n    padding: ${props => props.theme.spacing(10)}px;\r\n  }\r\n\r\n  /* Blurred background */\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: url('your-background-image-url') no-repeat center center/cover;\r\n    filter: blur(20px); /* Adjust the blur intensity */\r\n    z-index: -1; /* Ensure the blur is behind the content */\r\n  }\r\n`;\r\n\r\nfunction SignIn({error}) {\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const history = useHistory();  // Initialize useHistory for navigation\r\n\r\n  const handleTogglePasswordVisibility = () => {\r\n    setShowPassword((prevShowPassword) => !prevShowPassword);\r\n  };\r\n\r\n  function handleSubmit(event) {\r\n    history.push('/dashboard');  // Redirect to dashboard\r\n  }\r\n\r\n  return (\r\n      !loading ?\r\n    <Wrapper>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Logo logo={logo} padding={'10px'} width={'300px'} />\r\n        </Grid>\r\n      </Grid>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl margin=\"normal\" fullWidth>\r\n          <TextField\r\n            id=\"username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            label=\"Email\"\r\n            autoFocus\r\n            onChange={handleFieldChange}/>\r\n        </FormControl>\r\n        <FormControl margin=\"normal\" fullWidth>\r\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n          <Input\r\n            name=\"password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            onChange={handleFieldChange}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={handleTogglePasswordVisibility} edge=\"end\">\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          md={2}\r\n          type='submit'\r\n          style={{marginTop: 20}}\r\n        >\r\n          LOGIN\r\n        </Button>\r\n      </form>\r\n      <Divider/>\r\n      <div align=\"center\" style={{ marginTop: 20 }}>\r\n        <Link href=\"/auth/forgot-password\" variant=\"body2\">\r\n          Forgot your password?\r\n        </Link>\r\n      </div>\r\n    </Wrapper>\r\n          :\r\n          <div/>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.auth.error\r\n});\r\n\r\nexport default connect(mapStateToProps)(SignIn);\r\n"],"sourceRoot":""}