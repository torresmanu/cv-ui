{"version":3,"sources":["pages/pages/Dashboard/NewsSection.js","pages/pages/Dashboard/Carousel.js","pages/pages/Dashboard/GradientLineChart.js","pages/pages/Dashboard/LinePlotChart.js","pages/pages/Dashboard/CandlePlotChart.js","pages/pages/Dashboard/ChartsContainer.js","pages/pages/Dashboard/TokenToolbar.js","../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","pages/pages/Dashboard/FearGreedIndicator.js","pages/pages/Dashboard/TopGainers.js","pages/pages/Dashboard/Dashboard.js","pages/pages/Dashboard/index.js"],"names":["NewsCard","_ref","imageUrl","title","description","newsLink","handleNext","handlePrevious","React","createElement","Card","className","IconButton","onClick","ArrowBackIos","style","color","CardContent","Grid","container","spacing","item","md","xs","src","alt","Typography","variant","gutterBottom","length","slice","Button","window","open","ArrowForwardIos","NewsSection","dispatch","useDispatch","data","newsData","status","error","useSelector","state","news","currentIndex","setCurrentIndex","useState","useEffect","fetchCryptoNews","CircularProgress","prevIndex","scrollAnimation","keyframes","CarouselContainer","styled","div","CarouselContent","duration","NewsItem","img","Carousel","newsArticles","cryptoNews","carouselContentRef","useRef","isMobile","useMediaQuery","animationDuration","setAnimationDuration","current","calculatedDuration","scrollWidth","parentElement","offsetWidth","Math","max","ref","map","article","index","Tooltip","key","username","arrow","placement","href","target","rel","textDecoration","text","ChartJS","register","LineElement","PointElement","LinearScale","CategoryScale","Filler","Title","Legend","zoomPlugin","GradientLineChart","selectedToken","tokenDictioanry","tokenData","tokens","theme","useTheme","isMdUp","breakpoints","up","groupByDay","setGroupByDay","options","responsive","maintainAspectRatio","layout","padding","innerWidth","top","bottom","interaction","mode","axis","intersect","scales","y","ticks","font","size","maxTicksLimit","autoSkip","callback","value","toFixed","grid","display","drawBorder","x","maxRotation","minRotation","plugins","legend","zoom","pan","enabled","drag","height","width","Box","sx","justifyContent","marginBottom","str","charAt","toUpperCase","toLowerCase","CustomSwitch","Line","canvas","ctx","getContext","gradient","createLinearGradient","addColorStop","dataToPlot","groupedData","forEach","entry","dateKey","date","toISOString","split","totalRealPrice","count","realPrice","Object","entries","_ref2","Date","avgRealPrice","groupByDayAndAverage","labels","Intl","DateTimeFormat","day","month","format","datasets","fill","backgroundColor","borderColor","pointRadius","pointHoverRadius","pointHitRadius","tension","LinePlotChart","CandlePlotChart","tokenDictionary","bitcoin","ethereum","cardano","litecoin","binancecoin","polygon","solana","processedData","reduce","acc","point","dayKey","high","low","min","close","prepareChartData","Plot","type","name","increasing","line","decreasing","xaxis","gridcolor","titlefont","tickfont","showgrid","tickangle","rangeslider","visible","yaxis","tickvals","undefined","margin","t","r","l","b","autosize","paper_bgcolor","plot_bgcolor","useResizeHandler","config","modeBarButtonsToRemove","displaylogo","ChartsContainer","Fragment","tokenImages","BTC","ETH","ethImage","ADA","adaImage","LINK","linkImage","LTC","BNB","XRP","SOL","tokenMap","chainlink","ripple","TokenToolbar","onTokenChange","availableTokens","keys","marginTop","token","find","getKeyByValue","borderRadius","align","marginLeft","marginRight","LinearProgress","props","classes","_props$color","valueBuffer","_props$variant","other","_objectWithoutProperties","rootProps","inlineStyles","bar1","bar2","round","transform","direction","concat","process","_transform","_extends","clsx","root","capitalize","determinate","indeterminate","buffer","query","role","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer","withStyles","getColor","palette","lighten","darken","backgroundPrimary","primary","main","backgroundSecondary","secondary","position","overflow","colorAdjust","colorPrimary","colorSecondary","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","left","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","right","opacity","FearGreedIndicator","sentimentData","sentiment","fetchSentimentData","latestData","alignItems","Icon","icon","sadFaceIcon","emoticonHappyOutline","fontWeight","fontSize","classification","useStyles","makeStyles","card","header","coinRow","coinInfo","flex","coinLogo","coinName","priceColumn","textAlign","changeColumn","TopGainersCard","topGainers","fetchTopGainers","coin","id","Avatar","image","symbol","price","toLocaleString","parseFloat","change","flexGrow","buttonContainer","gap","Dashboard","historicalData","setSelectedToken","favoriteTokens","setFavoriteTokens","openAlertModal","setOpenAlertModal","fetchAllHistoricalData","handleOpenAlertModal","downloadCSV","console","log","csvData","join","blob","Blob","url","URL","createObjectURL","link","document","setAttribute","body","appendChild","click","removeChild","handleFavoriteToggle","prev","includes","filter","boxShadow","disabled","Star","startIcon","NotificationsIcon","GetAppIcon","border","FramerCard","Dialog","onClose","handleCloseAlertModal","fullWidth","maxWidth","PaperProps","background","DialogContent","Database","appliedFilters","accessDenied","filters","resultCount","setResultCount","evaluationsData","setEvaluationsData","subjectsData","setSubjectsData","resultsLoading","setResultsLoading","searchFilters","setSearchFilters","AccessDenied","evaluations","subjects","handleCopyFilters","copyJSONToClipboard"],"mappings":"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","file":"static/js/18.4c18e990.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCryptoNews } from '../../../redux/store/newsSlice';\nimport { Grid, Card, CardContent, Typography, Button, IconButton, CircularProgress } from '@material-ui/core';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\nimport '../../../App.css';\n\nconst NewsCard = ({ imageUrl, title, description, newsLink, handleNext, handlePrevious }) => {\n  return (\n    <Card className=\"news-card\">\n      <IconButton onClick={handlePrevious} className=\"news-arrows news-arrow-left\">\n        <ArrowBackIos style={{ color: 'white' }} />\n      </IconButton>\n\n      <CardContent>\n        <Grid container spacing={5} className=\"news-card-content\">\n          <Grid item md={4} xs={12}>\n            <img src={imageUrl} alt={title} className=\"news-image\" />\n          </Grid>\n          <Grid item md={7} xs={12}>\n            <Typography variant=\"h6\" gutterBottom>\n              {title}\n            </Typography>\n            <Typography variant=\"body2\" className=\"news-description\">\n              {description.length > 350 ? `${description.slice(0, 350)}...` : description}\n            </Typography>\n            <Button\n              variant=\"outlined\"\n              onClick={() => window.open(newsLink, '_blank', 'noopener,noreferrer')}\n              className=\"news-button\"\n            >\n              Read More\n            </Button>\n          </Grid>\n        </Grid>\n      </CardContent>\n\n      <IconButton onClick={handleNext} className=\"news-arrows news-arrow-right\">\n        <ArrowForwardIos style={{ color: 'white' }} />\n      </IconButton>\n    </Card>\n  );\n};\n\nconst NewsSection = () => {\n  const dispatch = useDispatch();\n  const { data: newsData, status, error } = useSelector((state) => state.news);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchCryptoNews());\n    }\n  }, [dispatch, status]);\n\n  const handleNext = () => setCurrentIndex((prevIndex) => (prevIndex + 1) % newsData.length);\n  const handlePrevious = () => setCurrentIndex((prevIndex) => (prevIndex === 0 ? newsData.length - 1 : prevIndex - 1));\n\n  if (status === 'loading') return <div className=\"loading-spinner\"><CircularProgress /></div>;\n  if (status === 'failed') return <Typography className=\"error-message\">Error loading news: {error}</Typography>;\n  if (!newsData.length) return <Typography className=\"error-message\">No news available.</Typography>;\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <NewsCard\n          imageUrl={newsData[currentIndex].imageUrl}\n          title={newsData[currentIndex].title}\n          description={newsData[currentIndex].description}\n          newsLink={newsData[currentIndex].newsLink}\n          handleNext={handleNext}\n          handlePrevious={handlePrevious}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default NewsSection;","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCryptoNews } from '../../../redux/store/binanceNewsSlice';\nimport styled, { keyframes } from 'styled-components';\nimport { Tooltip, CircularProgress, Typography, useMediaQuery } from '@material-ui/core';\n\nconst scrollAnimation = keyframes`\n  0% {\n    transform: translateX(0);\n  }\n  100% {\n    transform: translateX(-100%);\n  }\n`;\n\nconst CarouselContainer = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  background: rgba(255, 255, 255, 0);\n  backdrop-filter: blur(10px);\n  position: relative;\n  margin-bottom: 30px;\n`;\n\nconst CarouselContent = styled.div`\n  display: inline-block;\n  padding: 10px 0;\n  animation: ${scrollAnimation} ${({ duration }) => duration}s linear infinite;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst NewsItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 50px;\n  color: white;\n`;\n\nconst Avatar = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n`;\n\nconst Carousel = () => {\n  const dispatch = useDispatch();\n  const { data: newsArticles, status, error } = useSelector((state) => state.cryptoNews);\n  const carouselContentRef = useRef(null);\n  const isMobile = useMediaQuery('(max-width: 600px)');\n  const [animationDuration, setAnimationDuration] = useState(30); // Default duration\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchCryptoNews());\n    }\n  }, [dispatch, status]);\n\n  useEffect(() => {\n    if (carouselContentRef.current && newsArticles.length > 0) {\n      const contentWidth = carouselContentRef.current.scrollWidth;\n      const viewportWidth = carouselContentRef.current.parentElement.offsetWidth;\n      const speedPerPixel = isMobile ? 0.02 : 0.05; // Increase speed on mobile\n      let calculatedDuration = (contentWidth / viewportWidth) * speedPerPixel;\n\n      if (isMobile) {\n        calculatedDuration = Math.max(15, calculatedDuration); // Ensure it's fast enough on mobile\n      } else {\n        calculatedDuration = Math.max(30, calculatedDuration); // Ensure minimum duration on desktop\n      }\n\n      setAnimationDuration(calculatedDuration);\n    }\n  }, [newsArticles, isMobile]);\n\n  if (status === 'loading') return <CircularProgress />;\n  if (status === 'failed') return <Typography color=\"error\">Error loading news: {error}</Typography>;\n  if (!newsArticles.length) return <Typography>No news available.</Typography>;\n\n  return (\n    <CarouselContainer>\n      <CarouselContent ref={carouselContentRef} duration={animationDuration}>\n        {[...newsArticles, ...newsArticles].map((article, index) => (\n          <Tooltip key={index} title={`Read on ${article.username}`} arrow placement=\"top\">\n            <a \n              href={article.newsLink} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\" \n              style={{ textDecoration: 'none', color: 'inherit' }}\n            >\n              <NewsItem>\n                <span>\n                  <strong>{article.username}</strong>: {article.text.slice(0, 100)}...\n                </span>\n              </NewsItem>\n            </a>\n          </Tooltip>\n        ))}\n      </CarouselContent>\n    </CarouselContainer>\n  );\n};\n\nexport default Carousel;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  CategoryScale,\n  Filler,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport { Box, Typography } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport CustomSwitch from '../../components/CustomSwitch';\n\n// Register necessary components for Chart.js\nChartJS.register(LineElement, PointElement, LinearScale, CategoryScale, Filler, Title, Tooltip, Legend, zoomPlugin);\n\nconst GradientLineChart = ({ selectedToken }) => {\nconst tokenDictioanry = {\n  'bitcoin': 'BTC',\n  'ethereum': 'ETH',\n  'cardano': 'ADA',\n  'chainlink': 'LINK',\n  'litecoin': 'LTC',\n  'binancecoin': 'BNB',\n  'ripple': 'XRP',\n  'solana': 'SOL',\n};\n\n  const tokenData = useSelector((state) => state.tokens.data[tokenDictioanry[selectedToken]]);\n  const status = useSelector((state) => state.tokens.status);\n  const theme = useTheme();\n  const isMdUp = useMediaQuery(theme.breakpoints.up('md'));\n  const [groupByDay, setGroupByDay] = React.useState(true);\n\n  const groupByDayAndAverage = (data) => {\n    const groupedData = {};\n    data.forEach((entry) => {\n      const dateKey = entry.date.toISOString().split('T')[0];\n      if (!groupedData[dateKey]) {\n        groupedData[dateKey] = { totalRealPrice: 0, count: 0 };\n      }\n      groupedData[dateKey].totalRealPrice += entry.realPrice;\n      groupedData[dateKey].count += 1;\n    });\n    return Object.entries(groupedData).map(([date, { totalRealPrice, count }]) => ({\n      date: new Date(date),\n      avgRealPrice: totalRealPrice / count,\n    }));\n  };\n\n  const chartData = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const height = window.innerWidth < 600 ? 150 : 300; // ✅ Adaptive height based on screen size\n    const gradient = ctx.createLinearGradient(0, 0, 0, height); \n    gradient.addColorStop(0, 'rgba(72, 177, 85, 0.3)');\n    gradient.addColorStop(1, 'rgba(72, 177, 85, 0)');\n\n    if (!tokenData) return;\n\n    const dataToPlot = groupByDay ? groupByDayAndAverage(tokenData) : tokenData;\n\n    // Format dates to 'dd MMM yyyy'\n    const formattedDates = dataToPlot.map((item) =>\n      new Intl.DateTimeFormat('en-US', {\n        day: '2-digit',\n        month: 'short',\n      }).format(item.date)\n    );\n\n    return {\n      labels: formattedDates,\n      datasets: [\n        {\n          data: dataToPlot.map((item) => item.avgRealPrice || item.realPrice),\n          fill: true,\n          backgroundColor: gradient,\n          borderColor: 'rgba(72, 177, 85, 0.8)',\n          pointRadius: 0, // ✅ Small visible points\n          pointHoverRadius: 6, // ✅ Larger points on hover\n          pointHitRadius: 10, // ✅ Easier to hover over points\n          tension: 0.3, // ✅ Less smoothing, more accurate hover\n        },\n      ],\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    layout: {\n      padding: window.innerWidth < 600 ? { top: 5, bottom: 15 } : { top: 25, bottom: 40 },\n    },\n    interaction: {\n      mode: 'nearest', // ✅ Snaps to nearest data point\n      axis: 'x', // ✅ Ensures smooth tracking along x-axis\n      intersect: false, // ✅ Ensures hover works even when not directly on the point\n    },\n    scales: {\n      y: {\n        ticks: {\n          color: 'white',\n          font: { size: window.innerWidth < 600 ? 12 : 14 },\n          maxTicksLimit: window.innerWidth < 600 ? 4 : 6,\n          autoSkip: true,\n          callback: function (value) {\n            return value >= 1000 ? `${value / 1000}k` : value.toFixed(2);\n          },\n        },\n        grid: { display: window.innerWidth < 600 ? false : true, drawBorder: false, color: 'rgba(255, 255, 255, 0.1)' },\n      },\n      x: {\n        ticks: {\n          color: 'white',\n          font: { size: window.innerWidth < 600 ? 12 : 14 },\n          maxTicksLimit: window.innerWidth < 600 ? 3 : 6,\n          autoSkip: true,\n          maxRotation: 0,\n          minRotation: 0,\n        },\n        grid: { display: window.innerWidth < 600 ? false : true, drawBorder: false, color: 'rgba(255, 255, 255, 0.1)' },\n      },\n    },\n    plugins: {\n      legend: { display: false },\n      zoom: {\n        pan: { enabled: true, mode: 'x' },\n        zoom: { enabled: true, mode: 'x', drag: true },\n      },\n    },\n  };\n\n  const toCapitalCase = (str) => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n\n  return (\n    <div style={{ height: isMdUp ? '400px' : '200px', width: '100%' }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\n        <Typography variant=\"h6\" gutterBottom>\n          {toCapitalCase(selectedToken)} USD\n        </Typography>\n        <CustomSwitch groupByDay={groupByDay} setGroupByDay={setGroupByDay} />\n      </Box>\n      {status === 'loading' ? (\n        <p>Loading data...</p>\n      ) : tokenData ? (\n        <Line data={chartData} options={options} />\n      ) : (\n        <p>No data available</p>\n      )}\n    </div>\n  );\n};\n\nexport default GradientLineChart;","import React, { useState, useEffect } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport Plot from 'react-plotly.js';\nimport Papa from 'papaparse';\nimport CustomSwitch from '../../components/CustomSwitch';\nimport GradientLineChart from './GradientLineChart';\n\nconst tokenColors = {\n  BTC: '#F7931A',\n  ETH: '#627EEA',\n  ADA: '#0033AD',\n  LINK: '#2A5ADA',\n  LTC: '#345D9D',\n  BNB: '#F3BA2F',\n  MATIC: '#8247E5',\n  SOL: '#00FFA3',\n};\n\nconst LinePlotChart = ({ selectedToken }) => {\n {/* const [dataByToken, setDataByToken] = useState({});\n  const [groupByDay, setGroupByDay] = useState(true);\n\n  const loadCSVData = () => {\n    fetch(`${process.env.PUBLIC_URL}/data.csv`)\n      .then((response) => response.text())\n      .then((csvText) => {\n        Papa.parse(csvText, {\n          header: true,\n          dynamicTyping: true,\n          complete: (results) => {\n            const tokenMap = {};\n            results.data.forEach((row) => {\n              if (row.Token && row.Real_price && row.Prediction_Ensemble) {\n                const date = new Date(row.Fecha);\n                if (!tokenMap[row.Token]) tokenMap[row.Token] = [];\n                tokenMap[row.Token].push({\n                  date,\n                  realPrice: row.Real_price,\n                  predictionEnsemble: row.Prediction_Ensemble,\n                });\n              }\n            });\n            setDataByToken(tokenMap);\n          },\n        });\n      });\n  };\n\n  const groupByDayAndAverage = (data) => {\n    const groupedData = {};\n    data.forEach((entry) => {\n      const dateKey = entry.date.toISOString().split('T')[0];\n      if (!groupedData[dateKey]) {\n        groupedData[dateKey] = { totalRealPrice: 0, totalPrediction: 0, count: 0 };\n      }\n      groupedData[dateKey].totalRealPrice += entry.realPrice;\n      groupedData[dateKey].totalPrediction += entry.predictionEnsemble;\n      groupedData[dateKey].count += 1;\n    });\n    return Object.entries(groupedData).map(([date, { totalRealPrice, totalPrediction, count }]) => ({\n      date: new Date(date),\n      avgRealPrice: totalRealPrice / count,\n      avgPredictionEnsemble: totalPrediction / count,\n    }));\n  };\n\n  useEffect(() => {\n    loadCSVData();\n  }, []);*/}\n\n  return (\n    <Box sx={{ backgroundColor: 'transparent' }}>\n      <GradientLineChart selectedToken={selectedToken}/>\n    </Box>\n  );\n};\n\nexport default LinePlotChart;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Box, Typography } from '@material-ui/core';\nimport Plot from 'react-plotly.js';\n\nconst CandlePlotChart = ({ selectedToken }) => {\n  const tokenDictionary = {\n    bitcoin: 'BTC',\n    ethereum: 'ETH',\n    cardano: 'ADA',\n    litecoin: 'LTC',\n    binancecoin: 'BNB',\n    polygon: 'MATIC',\n    solana: 'SOL',\n  };\n\n  // Access token data and status from Redux\n  const tokenData = useSelector((state) => state.tokens.data[tokenDictionary[selectedToken]]);\n  const status = useSelector((state) => state.tokens.status);\n\n  // Prepare candlestick chart data\n  const prepareChartData = (data) => {\n    const groupedData = data.reduce((acc, point) => {\n      const dayKey = new Date(point.date).toISOString().split('T')[0];\n      if (!acc[dayKey]) {\n        acc[dayKey] = {\n          open: point.realPrice,\n          high: point.realPrice,\n          low: point.realPrice,\n          close: point.realPrice,\n        };\n      } else {\n        acc[dayKey].high = Math.max(acc[dayKey].high, point.realPrice);\n        acc[dayKey].low = Math.min(acc[dayKey].low, point.realPrice);\n        acc[dayKey].close = point.realPrice;\n      }\n      return acc;\n    }, {});\n\n    return Object.entries(groupedData).map(([date, { open, high, low, close }]) => ({\n      date: new Date(date),\n      open,\n      high,\n      low,\n      close,\n    }));\n  };\n\n  const isMobile = window.innerWidth < 600; // ✅ Detect mobile view\n  const processedData = tokenData ? prepareChartData(tokenData) : [];\n  \n  return (\n    <Box sx={{ backgroundColor: 'transparent' }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Candlestick Chart ({selectedToken.charAt(0).toUpperCase() + selectedToken.slice(1)})\n      </Typography>\n      {status === 'loading' ? (\n        <Typography>Loading data...</Typography>\n      ) : status === 'failed' ? (\n        <Typography variant=\"body2\" style={{ color: 'red' }}>\n          Error loading data for {selectedToken}.\n        </Typography>\n      ) : processedData.length > 0 ? (\n        <Plot\n          data={[\n            {\n              x: processedData.map((point) => point.date),\n              open: processedData.map((point) => point.open),\n              high: processedData.map((point) => point.high),\n              low: processedData.map((point) => point.low),\n              close: processedData.map((point) => point.close),\n              type: 'candlestick',\n              name: tokenDictionary[selectedToken],\n              increasing: { line: { color: '#2AAE6F', width: 0.7 } },\n              decreasing: { line: { color: '#FF3333', width: 0.7 } },\n            },\n          ]}\n          layout={{\n            xaxis: {\n              type: 'date',\n              gridcolor: 'rgba(255, 255, 255, 0.1)',\n              titlefont: { color: 'white' },\n              tickfont: { color: 'white', size: isMobile ? 10 : 14 }, // ✅ Smaller font on mobile\n              showgrid: false,\n              tickangle: isMobile ? -45 : 0, // ✅ Avoid overlap on mobile\n              rangeslider: { visible: false },\n            },\n            yaxis: {\n              gridcolor: 'rgba(255, 255, 255, 0.1)',\n              tickfont: { color: 'white', size: isMobile ? 10 : 14 }, // ✅ Smaller font on mobile\n              tickvals: isMobile ? undefined : undefined, // ✅ Fewer ticks on mobile\n              showgrid: false, // ✅ Removes grid for cleaner look\n            },\n            margin: { t: 20, r: 10, l: isMobile ? 40 : 60, b: isMobile ? 50 : 70 }, // ✅ Adjust margins\n            autosize: true,\n            height: isMobile ? 200 : 400, // ✅ Smaller height on mobile\n            paper_bgcolor: 'rgba(255, 255, 255, 0)',\n            plot_bgcolor: 'rgba(255, 255, 255, 0)',\n          }}\n          useResizeHandler\n          style={{ width: '100%' }}\n          config={{\n            modeBarButtonsToRemove: ['resetScale2d', 'zoom2d', 'pan2d', 'select2d', 'lasso2d'],\n            displaylogo: false,\n          }}\n        />\n      ) : (\n        <Typography>No data available for {selectedToken}.</Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default CandlePlotChart;","import React from 'react';\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport LinePlotChart from './LinePlotChart';\nimport CandlePlotChart from './CandlePlotChart';\n\nconst ChartsContainer = ({ selectedToken }) => {\n  return (\n    <React.Fragment>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Card className=\"customCard\">\n            <CardContent>\n              <LinePlotChart selectedToken={selectedToken} />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ChartsContainer;","import React from 'react';\nimport { Grid, Button, Typography } from '@material-ui/core';\nimport btcImage from '../../../images/btc.png';\nimport ethImage from '../../../images/eth.png';\nimport adaImage from '../../../images/ada.png';\nimport linkImage from '../../../images/link.png';\nimport ltcImage from '../../../images/ltc.png';\nimport bnbImage from '../../../images/bnb.png';\nimport maticImage from '../../../images/matic.png';\nimport solImage from '../../../images/sol.png';\n\n// Sample token images\nconst tokenImages = {\n  BTC: 'https://cryptologos.cc/logos/bitcoin-btc-logo.png',\n  ETH: ethImage,\n  ADA: adaImage,\n  LINK: linkImage,\n  LTC: 'https://cryptologos.cc/logos/litecoin-ltc-logo.png',\n  BNB: 'https://cryptologos.cc/logos/binance-coin-bnb-logo.png',\n  XRP: 'https://cryptologos.cc/logos/xrp-xrp-logo.png',\n  SOL: 'https://cryptologos.cc/logos/solana-sol-logo.png',\n};\n\n// token map\nconst tokenMap = {\n  bitcoin: 'BTC',\n  ethereum: 'ETH',\n  cardano: 'ADA',\n  chainlink: 'LINK',\n  litecoin: 'LTC',\n  binancecoin: 'BNB',\n  ripple: 'XRP',\n  solana: 'SOL',\n};\n// Function to get the key by value\nconst getKeyByValue = (map, value) => {\n  return Object.keys(map).find((key) => map[key] === value);\n};\nconst TokenToolbar = ({ selectedToken, onTokenChange }) => {\n  const availableTokens = Object.keys(tokenImages);\n\n  return (\n    <div>\n      <Grid container spacing={2} style={{ marginBottom: '20px', marginTop: '20px' }}>\n        {availableTokens.map((token) => (\n          <Grid item key={token}>\n            <Button\n              onClick={() => onTokenChange(getKeyByValue(tokenMap, token))}\n              className={tokenMap[selectedToken] === token ? 'selectedToken' : ''}\n            >\n              <img\n                src={tokenImages[token]} // Use the token image for each button\n                alt={token}\n                style={{\n                  width: 20,\n                  height: 20,\n                  borderRadius: '50%', // Keep the image circular\n                }}\n              />\n              <Typography variant=\"caption\" align=\"center\" style={{ marginLeft: '10px', marginRight: '10px' }}>\n                {token}\n              </Typography>\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default TokenToolbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4,\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0 -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0 -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0 -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0 -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid, Typography, Box, LinearProgress, Card, CardContent } from '@material-ui/core';\nimport { Icon } from '@iconify/react';\nimport emoticonHappyOutline from '@iconify/icons-mdi/emoticon-happy-outline';\nimport sadFaceIcon from '@iconify-icons/mdi/emoticon-sad-outline';\nimport { fetchSentimentData } from '../../../redux/store/sentimentSlice';\n\nconst FearGreedIndicator = () => {\n  const dispatch = useDispatch();\n  const { data: sentimentData, status, error } = useSelector((state) => state.sentiment);\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchSentimentData());\n    }\n  }, [dispatch, status]);\n\n  const latestData = sentimentData.length > 0 ? sentimentData[0] : null;\n\n  return (\n    <Card className=\"customCard\">\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Fear & Greed Index\n        </Typography>\n        <Typography variant=\"body2\" gutterBottom style={{ marginBottom: 30 }}>\n          Powered by Alternative.me API\n        </Typography>\n\n        {status === 'loading' ? (\n          <Box>\n            <Typography variant=\"body2\">Loading sentiment data...</Typography>\n            <LinearProgress />\n          </Box>\n        ) : status === 'failed' ? (\n          <Typography variant=\"body2\" style={{ color: 'red' }}>\n            {error || 'Failed to load sentiment data'}\n          </Typography>\n        ) : latestData ? (\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <Icon\n                icon={latestData.value <= 50 ? sadFaceIcon : emoticonHappyOutline}\n                style={{\n                  width: 58,\n                  height: 58,\n                  marginRight: 10,\n                  color: latestData.value <= 50 ? '#FF3333' : '#2AAE6F',\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h6\">\n                {latestData.value <= 50 ? 'Fear Mood' : 'Greed Mood'}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                style={{\n                  color: latestData.value <= 50 ? '#FF3333' : '#2AAE6F',\n                  fontWeight: 500,\n                  fontSize: '0.85rem',\n                }}\n              >\n                {latestData.value}% - {latestData.classification}\n              </Typography>\n            </Grid>\n          </Grid>\n        ) : (\n          <Typography variant=\"body2\">No data available</Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default FearGreedIndicator;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, CardContent, Typography, Box, Avatar, LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchTopGainers } from '../../../redux/store/topGainersSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: '#1E2329',\n    color: 'white',\n    borderRadius: 12,\n    padding: theme.spacing(2),\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2),\n  },\n  coinRow: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: theme.spacing(2, 0),\n  },\n  coinInfo: {\n    display: 'flex',\n    alignItems: 'center',\n    flex: 2,\n  },\n  coinLogo: {\n    width: 24,\n    height: 24,\n    marginRight: theme.spacing(2),\n  },\n  coinName: {\n    fontSize: '1rem',\n    fontWeight: 500,\n  },\n  priceColumn: {\n    flex: 1,\n    textAlign: 'right',\n    fontWeight: 600,\n  },\n  changeColumn: {\n    flex: 1,\n    textAlign: 'right',\n    fontWeight: 600,\n  },\n}));\n\nconst TopGainersCard = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  // Retrieve top gainers data and status from the Redux store\n  const { data: topGainers, status, error } = useSelector((state) => state.topGainers);\n\n  // Dispatch fetchTopGainers thunk on component mount\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchTopGainers());\n    }\n  }, [dispatch, status]);\n\n  return (\n    <Card className=\"customCard\">\n      <CardContent>\n        <Box className={classes.header}>\n          <Typography variant=\"h6\">Top Gainers</Typography>\n        </Box>\n\n        {status === 'loading' && (\n          <Box>\n            <Typography variant=\"body2\">Loading top gainers...</Typography>\n            <LinearProgress />\n          </Box>\n        )}\n\n        {status === 'failed' && (\n          <Typography variant=\"body2\" style={{ color: 'red' }}>\n            {error || 'Failed to load top gainers data'}\n          </Typography>\n        )}\n\n        {status === 'succeeded' &&\n          topGainers.map((coin) => (\n            <Box key={coin.id} className={classes.coinRow}>\n              <Box className={classes.coinInfo}>\n                <Avatar src={coin.image} alt={coin.symbol} className={classes.coinLogo} />\n                <Typography className={classes.coinName}>\n                  {coin.symbol.toUpperCase()}\n                </Typography>\n              </Box>\n              <Typography className={classes.priceColumn}>\n                ${coin.price.toLocaleString()}\n              </Typography>\n              <Typography\n                className={classes.changeColumn}\n                style={{ color: parseFloat(coin.change) >= 0 ? '#2AAE6F' : '#FF3333' }}\n              >\n                {parseFloat(coin.change) >= 0 ? '+' : ''}\n                {parseFloat(coin.change).toFixed(2)}%\n              </Typography>\n            </Box>\n          ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TopGainersCard;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid, Button, Dialog, DialogContent, IconButton, Box, Typography, Card, CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Star } from '@material-ui/icons';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ChartsContainer from './ChartsContainer';\nimport TokenToolbar from './TokenToolbar';\nimport { fetchAllHistoricalData } from '../../../redux/store/tokenSlice';\nimport FearGreedIndicator from './FearGreedIndicator';\nimport TopGainersCard from './TopGainers';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CandlePlotChart from './CandlePlotChart';\nimport FramerCard from '../FreeDashboard/FrameCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n  },\n  buttonContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    justifyContent: 'center',\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const theme = useTheme();\n  const isMdUp = useMediaQuery(theme.breakpoints.up('md')); // Check if screen width is md or higher\n\n  // Access token data and status from Redux\n  const historicalData = useSelector((state) => state.tokens.data);\n  const status = useSelector((state) => state.tokens.status);\n\n  const [selectedToken, setSelectedToken] = useState('bitcoin');\n  const [favoriteTokens, setFavoriteTokens] = useState(['bitcoin', 'ethereum']);\n  const [openAlertModal, setOpenAlertModal] = useState(false);\n  const [availableTokens] = useState([\n    { id: 'bitcoin', symbol: 'BTC' },\n    { id: 'ethereum', symbol: 'ETH' },\n    { id: 'cardano', symbol: 'ADA' },\n    { id: 'chainlink', symbol: 'LINK' },\n    { id: 'litecoin', symbol: 'LTC' },\n    { id: 'binancecoin', symbol: 'BNB' },\n    { id: 'ripple', symbol: 'XRP' },\n    { id: 'solana', symbol: 'SOL' },\n  ]);\n\n  const tokenDictioanry = {\n    'bitcoin': 'BTC',\n    'ethereum': 'ETH',\n    'cardano': 'ADA',\n    'chainlink': 'LINK',\n    'litecoin': 'LTC',\n    'binancecoin': 'BNB',\n    'ripple': 'XRP',\n    'solana': 'SOL',\n  };\n\n  // Dispatch the action to fetch all historical data\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchAllHistoricalData());\n    }\n  }, [dispatch, status]);\n\n  const handleFavoriteToggle = () => {\n    setFavoriteTokens((prev) =>\n      prev.includes(selectedToken)\n        ? prev.filter((token) => token !== selectedToken)\n        : [...prev, selectedToken]\n    );\n  };\n\n  const handleOpenAlertModal = () => setOpenAlertModal(true);\n  const handleCloseAlertModal = () => setOpenAlertModal(false);\n\n  const downloadCSV = () => {\n    const token = selectedToken ? tokenDictioanry[selectedToken] : undefined;\n    console.log(historicalData[token])\n    if (selectedToken && historicalData[token]) {\n      const csvData = historicalData[token]\n        .map((item) => `${item.date.toISOString()},${item.realPrice}`)\n        .join('\\n');\n      const blob = new Blob([`Date,Price\\n${csvData}`], { type: 'text/csv;charset=utf-8;' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${selectedToken}_historical_data.csv`);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  return (\n    <Grid container spacing={5} className={classes.root}>\n      <Grid item xs={12} md={8}>\n        <TokenToolbar\n          selectedToken={selectedToken}\n          onTokenChange={setSelectedToken}\n          favoriteTokens={favoriteTokens}\n          setFavoriteTokens={setFavoriteTokens}\n          availableTokens={availableTokens.map((token) => token.symbol)}\n        />\n      </Grid>\n\n      <Grid item xs={12} md={4} className={classes.buttonContainer}>\n{/*         <IconButton\n          onClick={handleFavoriteToggle}\n          aria-label=\"favorite\"\n          style={{\n            backgroundColor: favoriteTokens.includes(selectedToken) ? '#196CBF' : 'rgba(255, 255, 255, 0.1)',\n            padding: 5,\n            borderRadius: 20,\n            opacity: 0.9,\n          }}\n          disabled={true}\n        >\n          <Star style={{ color: '#ffffff', width: 26, height: 26 }} />\n        </IconButton> */}\n        <IconButton\n          className='buttonDisabled'\n          onClick={handleFavoriteToggle}\n          aria-label=\"favorite\"\n          style={{\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\n            padding: 5,\n            borderRadius: 20,\n            opacity: 0.9,\n            boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.2)',\n          }}\n          disabled\n        >\n          <Star style={{ color: 'rgba(255, 255, 255, 0.5)', width: 26, height: 26 }} />\n        </IconButton>\n{/*         <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={handleOpenAlertModal}\n          startIcon={<NotificationsIcon />}\n          disabled={true}\n        >\n          Create Alert\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={downloadCSV}\n          startIcon={<GetAppIcon />}\n        >\n          Download CSV Data\n        </Button> */}\n\n        {isMdUp ? (\n        // Full buttons with text on larger screens\n        <>\n          <Button \n            className='buttonDisabled'\n            variant=\"outlined\" \n            color=\"primary\" \n            onClick={handleOpenAlertModal} \n            startIcon={<NotificationsIcon />}\n            disabled\n          >\n            Create Alert\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={downloadCSV}\n            startIcon={<GetAppIcon />}\n          >\n            Download CSV Data\n          </Button>\n        </>\n      ) : (\n        // Icon-only buttons on mobile\n        <>\n          <IconButton \n            color=\"primary\" \n            onClick={handleOpenAlertModal}\n            style={{\n              backgroundColor:  'rgba(255, 255, 255, 0.1)',\n              padding: 5,\n              borderRadius: 20,\n              opacity: 0.9,\n              boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.2)',\n            }}\n          >\n            <NotificationsIcon style={{ color: 'rgba(255, 255, 255, 0.5)', width: 26, height: 26 }} />\n          </IconButton>\n\n          <IconButton \n            color=\"primary\" \n            onClick={downloadCSV}\n            style={{\n              backgroundColor: 'rgba(255, 255, 255, 0.1)', // Bright blue background for enabled state\n              padding: 5,\n              borderRadius: 20,\n              border: '1px solid #FFFFFF', // White border\n              opacity: 1, // Full opacity\n              boxShadow: 'none', // Remove shadow\n            }}\n          >\n            <GetAppIcon style={{ color: '#FFFFFF', width: 26, height: 26 }} />\n          </IconButton>\n        </>\n      )}\n      </Grid>\n\n      <Grid container spacing={5}>\n        <Grid item xs={12} md={8}>\n          <ChartsContainer selectedToken={selectedToken} />\n          <Card className=\"customCard\" style={{marginTop: 20}}>\n            <CardContent>\n              <CandlePlotChart selectedToken={selectedToken} />\n            </CardContent>\n        </Card>\n        </Grid>\n        {/* Right Side - Info Cards */}\n        <Grid \n          item \n          xs={12} \n          md={4} \n          spacing={15}\n          style={isMdUp ? { } : {}}\n        > \n          <Box style={ {marginBottom: 20}}>\n            <FearGreedIndicator />\n          </Box>\n          <Box>\n            <TopGainersCard/>\n          </Box>\n        </Grid>\n      </Grid>\n      <FramerCard/>\n      <Dialog\n        open={openAlertModal}\n        onClose={handleCloseAlertModal}\n        fullWidth\n        maxWidth=\"sm\"\n        PaperProps={{\n          style: {\n            borderRadius: 20,\n            maxWidth: 350,\n            background: 'rgba(30, 35, 41, 0.1)',\n          },\n        }}\n      >\n        <DialogContent>\n          <Typography variant=\"h6\" gutterBottom>\n            {selectedToken} Price Alert\n          </Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            Set your price thresholds\n          </Typography>\n        </DialogContent>\n      </Dialog>\n    </Grid>\n  );\n};\n\nexport default Dashboard;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../../../App.css';\nimport NewsSection from './NewsSection';\nimport Carousel from './Carousel';\n\n// Material UI\nimport {\n  Grid,\n  Typography,\n} from '@material-ui/core';\n\n// Project files\nimport { copyJSONToClipboard } from '../../../utils/copyToClipboard';\nimport AccessDenied from '../../../components/AccessDenied';\n\n// Import actions from Redux slice\nimport {\n  clearAllFilters,\n  setSearchDisable} from '../../../redux/store/dbFilterSlice';\nimport Dashboard from './Dashboard';\nimport { margin } from 'polished';\n\nfunction Database() {\n  const dispatch = useDispatch();\n\n  // Access Redux state\n  const {\n    appliedFilters,\n    accessDenied,\n  } = useSelector((state) => state.filters);\n\n  // Local state variables\n  const [resultCount, setResultCount] = useState('');\n  const [evaluationsData, setEvaluationsData] = useState({});\n  const [subjectsData, setSubjectsData] = useState({});\n  const [resultsLoading, setResultsLoading] = useState(false);\n  const [searchFilters, setSearchFilters] = useState({})\n\n  const handleSearch = () => {\n    dispatch(setSearchDisable(true));\n\n    // Ensure appliedFilters has evaluation_filters and subject_filters\n    const jsonAppliedFilters = {\n      evaluation_filters: appliedFilters.evaluations_filters || {},\n      subject_filters: appliedFilters.subjects_filters || {},\n    };\n    setSearchFilters(jsonAppliedFilters);\n    setResultsLoading(true);\n    window.scroll(0, document.body.scrollHeight/3);\n\n  };\n\n  const handleClearFilters = () => {\n    dispatch(clearAllFilters());\n    dispatch(setSearchDisable(true));\n  };\n\n  const handleCopyFilters = () => {\n    copyJSONToClipboard(searchFilters);\n  };\n\n  return !accessDenied ? (\n    <Grid container spacing={3}>\n      <Typography variant=\"h1\" gutterBottom>\n        CryptoVoice Dashboard\n      </Typography>\n      <Dashboard evaluations={evaluationsData} subjects={subjectsData} handleCopyFilters={handleCopyFilters}/>\n      <Typography variant=\"h1\" gutterBottom style={{marginTop: \"70px\", marginBottom: \"40px\"}}>\n        Crypto News Spotlight\n      </Typography>\n      <Carousel />\n      <NewsSection />\n\n    </Grid>\n  ) : (\n    <AccessDenied />\n  );\n}\n\nexport default Database;"],"sourceRoot":""}