{"version":3,"sources":["../node_modules/@material-ui/icons/EditOutlined.js","pages/pages/Users/Users.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","Users","_permissions$portal_u","useLocation","state","JSON","parse","sessionStorage","getItem","GLOBALS","SESSION_KEYS","PERMISSIONS","find","perm","GET","MuiThemeProvider"],"mappings":"6GAEA,IAAIA,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,MAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,qNACD,gBAEJN,EAAQE,QAAUE,C,qKCPH,SAASG,IAAS,IAADC,EACfC,cACMC,MAEoB,QAA9BF,EADOG,KAAKC,MAAMC,eAAeC,QAAQC,EAAQC,aAAaC,cACjC,oBAAC,IAAAT,GAA3BA,EAA6BU,MAAMC,GAAQA,IAAOJ,EAAQE,YAAYG,MA0GpF,OACEjB,IAAAE,cAACgB,IAAgB,KAGrB,C","file":"static/js/15.40e881df.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\"\n}), 'EditOutlined');\n\nexports.default = _default;","import React from 'react';\n\nimport {MuiThemeProvider, Typography} from \"@material-ui/core\";\nimport { useLocation} from \"react-router-dom\";\n\nimport UserActions from \"./UserActions\";\nimport GLOBALS from \"../../../services/GLOBALS.json\";\n\n\n\nconst columns = [\"keyid\", \"name\", \"lastname\", \"email\", \"action\",\"enabled\"];\n\nexport default function Users (){\nconst location = useLocation();\nconst props = location.state;\nconst permissions = JSON.parse(sessionStorage.getItem(GLOBALS.SESSION_KEYS.PERMISSIONS));\nconst canEdit = permissions['portal_users']?.find((perm)=>(perm===GLOBALS.PERMISSIONS.GET));\n\nconst displayColumns = () => [\n  {\n    name: \"Id\",\n    options: {\n      display:'excluded',\n      filter: false,\n      searchable: false\n    }\n  },\n  {\n    name: \"Name\",\n    options: {\n      searchable: true,\n      search: true,\n      filter: false,\n      customBodyRender: (value, tableMeta) => {\n        return (\n          tableMeta.rowData[5] === 1 ? value : <Typography style={{color: 'rgba(42,44,43,0.47)'}}> {value} </Typography>\n        )\n      },\n    }\n  },\n  {\n    name: \"Last name\",\n    options: {\n      searchable: true,\n      search: true,\n      filter: false,\n      customBodyRender: (value, tableMeta) => {\n        return (\n          tableMeta.rowData[5] === 1 ? value : <Typography style={{color: 'rgba(42,44,43,0.47)'}}> {value} </Typography>\n        )\n      },\n    }\n  },\n  {\n    name: \"Email\",\n    options: {\n      searchable: true,\n      search: true,\n      filter: false,\n      customBodyRender: (value, tableMeta) => {\n        return (\n          tableMeta.rowData[5] === 1 ? value : <Typography style={{color: 'rgba(42,44,43,0.47)'}}> {value} </Typography>\n        )\n      },\n    }\n  },\n  {\n    name: \"Action\",\n    options: {\n      customBodyRender: (value, tableMeta) => {\n        return (\n          canEdit ?\n          <UserActions\n            user_id={tableMeta.rowData[0]}\n            institution_id={props.institution_id}\n            institution_name={ props.title}\n            is_distribution={props.is_distribution}\n          />\n          : <Typography> - </Typography>\n        )\n      },\n      searchable: false,\n      sort: false,\n      filter: false\n    }\n  },\n  {\n    name: \"Enabled\",\n    options: {\n      display:'excluded',\n      filter: true,\n      customFilterListOptions: { render: v => v === 1 ? `Show Enabled` : 'Show Disabled' },\n      filterOptions: { renderValue: v => v === 1 ? 'Enabled' : 'Disabled' },\n      filterList: [1],\n      searchable: true\n    }\n  },\n ];\n\nconst options = {\n  filter: true,\n  confirmFilters: false,\n  filterType: 'checkbox',\n  sort: true,\n  selectableRows: 'none',\n  print: false,\n  searchAlwaysOpen: false,\n  searchPlaceholder: 'Search by any column...',\n  responsive: 'standard',\n  viewColumns: false,\n  rowHover: false,\n  // Search ALL columns, including hidden fields that use display:false, viewColumns:false...\n  customSearch: (searchQuery, currentRow, columns) => {\n      let isFound = false;\n      currentRow.forEach(col => {\n        if (col && col.toString().toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0) {\n          isFound = true;\n        }\n      });\n      return isFound;\n  },\n};\n  return(\n    <MuiThemeProvider >\n    </MuiThemeProvider>\n  )\n}"],"sourceRoot":""}