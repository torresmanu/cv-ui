{"version":3,"sources":["images/check2.png","pages/auth/ResetPassword.js","../node_modules/@material-ui/core/esm/Input/Input.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/VisibilityOff.js","components/DataTable/warningDialog.js","pages/auth/authHelper.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js"],"names":["Button","styled","MuiButton","spacing","Wrapper","Paper","props","theme","breakpoints","up","LogoContainer","div","ForgotPassword","error","setError","React","useState","isLoading","setIsLoading","success","setSuccess","password","setPassword","confirmPassword","setConfirmPassword","warningDialog","setWarningDialog","id","useParams","search","useLocation","token","URLSearchParams","get","showPassword","setShowPassword","showPasswordConfir","setShowPasswordConfir","render404","setRender404","useEffect","undefined","handleTogglePasswordVisibility","flag","prevShowPassword","prevShowPasswordConfir","createElement","Fragment","Link","href","Logo","logo","padding","width","Page404","Box","sx","textAlign","confirmation","Typography","variant","gutterBottom","component","fullWidth","color","style","marginTop","borderRadius","mt","Grid","container","justify","item","paddingTop","paddingBottom","CircularProgress","alt","align","xs","Input","value","placeholder","type","onChange","event","target","endAdornment","InputAdornment","position","IconButton","onClick","e","edge","Visibility","VisibilityOff","red","handleSave","validatePassword","AuthService","resetPassword","then","response","includes","disabled","WarningDialog","open","onClose","handleWarningClose","cancelButton","title","contentText","ref","disableUnderline","classes","_props$fullWidth","_props$inputComponent","inputComponent","_props$multiline","multiline","_props$type","other","_objectWithoutProperties","InputBase","_extends","root","clsx","underline","muiName","withStyles","bottomLineColor","palette","formControl","focused","colorSecondary","borderBottomColor","secondary","main","borderBottom","concat","primary","left","bottom","content","right","transform","transition","transitions","create","duration","shorter","easing","easeOut","pointerEvents","text","borderBottomStyle","marginDense","input","inputMarginDense","inputMultiline","inputTypeSearch","name","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","d","_ref","Dialog","DialogTitle","Divider","DialogContent","map","DialogContentText","DialogActions","username","notInclude","test","children","className","_props$component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","muiFormControl","useFormControl","FormControlContext","Provider","positionEnd","positionStart","hiddenLabel","filled","margin","display","height","maxHeight","alignItems","whiteSpace","marginRight","marginLeft"],"mappings":"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","file":"static/js/9.79eabe5e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/check2.221d9eb5.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useParams, useLocation} from \"react-router-dom\";\r\n\r\nimport {\r\n  Button as MuiButton,\r\n  Link,\r\n  Paper,\r\n  Typography,\r\n  CircularProgress,\r\n  Grid,\r\n  Box,\r\n  InputAdornment,\r\n  IconButton,\r\n  Input\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {Logo} from \"../components/Logo\";\r\nimport logo from \"../../images/Logo4.png\";\r\nimport confirmation from \"../../images/check2.png\";\r\nimport WarningDialog from \"../../components/DataTable/warningDialog\";\r\nimport {validatePassword} from \"./authHelper\";\r\nimport { AuthService } from \"../../services/AuthService\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Page404 from \"./Page404\";\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst Wrapper = styled(Paper)`\r\n  padding: ${props => props.theme.spacing(6)}px;\r\n  width: 100%;\r\n\r\n  ${props => props.theme.breakpoints.up(\"md\")} {\r\n    padding: ${props => props.theme.spacing(10)}px;\r\n  }\r\n`;\r\nconst LogoContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  padding: 20px;\r\n  z-index: 1000; /* Ensure the logo is above other content */\r\n`;\r\n\r\nfunction ForgotPassword() {\r\n  const [error, setError] = React.useState(\"\"); \r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [password, setPassword] = React.useState('');\r\n  const [confirmPassword, setConfirmPassword] = React.useState('');\r\n  const [warningDialog, setWarningDialog] = React.useState(false);\r\n  const { id } = useParams();\r\n  const { search } = useLocation();\r\n  const queryParams = new URLSearchParams(search);\r\n  const token = queryParams.get('key');\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [showPasswordConfir, setShowPasswordConfir] = React.useState(false);\r\n  const [render404, setRender404] = React.useState(false);  \r\n\r\n  React.useEffect(() => {\r\n    if(id === undefined || token === null){\r\n      setRender404(true);\r\n    }\r\n  }, [id, token]);\r\n\r\n  const handleTogglePasswordVisibility = (flag) => {\r\n    flag === 0 ? setShowPassword((prevShowPassword) => !prevShowPassword) :\r\n    setShowPasswordConfir((prevShowPasswordConfir) => !prevShowPasswordConfir);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if(validateForm()){\r\n      if(password === confirmPassword){ \r\n        setIsLoading(true)\r\n        AuthService.resetPassword(id, token, password).then((response)=>{\r\n          if(response.includes('OK')){\r\n            setSuccess(true);\r\n            setIsLoading(false);\r\n          }\r\n          else{\r\n            setError('Password could not be reset. Please try again later.');\r\n            setIsLoading(false);\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        setError('Passwords do not match');\r\n      }    \r\n    }else{\r\n      setWarningDialog(true);\r\n    }\r\n  };\r\n\r\n  function validateForm() {\r\n    return validatePassword(password);\r\n  }\r\n\r\n  const handleWarningClose = () => {\r\n    setWarningDialog(false)\r\n  };\r\n  return (\r\n    <>\r\n    <LogoContainer>\r\n      <Link href=\"https://\">\r\n        <Logo logo={logo} padding={'10px'} width={'150px'} /> \r\n      </Link>\r\n    </LogoContainer>\r\n    {render404?\r\n     //If not id and token, user should not be here\r\n      <Page404/>\r\n    :\r\n    success && !isLoading ? \r\n    <>\r\n      <Box sx={{ textAlign: 'center' }}>\r\n        <Logo logo={confirmation} padding={'0px'} width={'200px'} />\r\n        <Typography variant=\"h3\" gutterBottom>\r\n          Password reset successful!\r\n        </Typography>\r\n        <Typography>\r\n          You can now log in with your new password\r\n        </Typography>\r\n        <Button\r\n          component={Link}\r\n          href=\"https://\" //it always goes to medical portal login\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{marginTop: \"20px\", borderRadius: '8px'}}\r\n          mt={2}\r\n        >\r\n          Go to Login\r\n        </Button>\r\n      </Box>\r\n      </>\r\n      :\r\n      !isLoading ?    \r\n      <>\r\n        <Wrapper>\r\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\" gutterBottom>\r\n            Reset Password\r\n          </Typography>\r\n        <Grid container spacing={2} style={{marginTop:\"10px\"}}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\">Password</Typography>\r\n              <Input\r\n              id=\"password\"\r\n              value={password}\r\n              placeholder=\"Enter Password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              onChange={(event) => {\r\n                setError('');\r\n                setPassword(event.target.value)}}\r\n              fullWidth\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={(e)=> handleTogglePasswordVisibility(0)} edge=\"end\">\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\" style={{marginTop:\"10px\"}}>Confirm Password</Typography>\r\n            <Input\r\n              id=\"password_confirmation\"\r\n              value={confirmPassword}\r\n              placeholder=\"Confirm Password\"\r\n              type={showPasswordConfir ? 'text' : 'password'}\r\n              onChange={(event) => {\r\n                setError('');\r\n                setConfirmPassword(event.target.value)}}\r\n              fullWidth\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={(e)=> handleTogglePasswordVisibility(1)} edge=\"end\">\r\n                    {showPasswordConfir ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </Grid>\r\n          {error && \r\n            <Grid item xs={12}>\r\n              <Typography component=\"h3\" variant=\"body2\" align=\"center\" style={{color: red[500], marginTop: \"10px\"}}>\r\n                {error}\r\n              </Typography>\r\n            </Grid>\r\n          }\r\n        </Grid>\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{marginTop: \"15px\", borderRadius: '8px'}}\r\n          mt={2}\r\n          onClick={handleSave}\r\n          disabled={error !== ''}\r\n        >\r\n          SAVE\r\n        </Button>\r\n        <WarningDialog\r\n          open={warningDialog}\r\n          onClose={handleWarningClose}\r\n          cancelButton={true}\r\n          title={'The password must meet the following requirements'}\r\n          contentText={['Between 8 and 64 characters',\r\n            'Must contains at least 1 uppercase, 1 lowercase, 1 number and 1 special character',\r\n            'Must not contain the User Email, dots or commas'\r\n          ]}\r\n        />\r\n        </Wrapper>\r\n      </>\r\n      : \r\n        <Grid container justify=\"center\">\r\n          <Grid item style={{paddingTop: '10%', paddingBottom: '5%'}}>\r\n            <CircularProgress alt={'loading..'}/>\r\n          </Grid>\r\n        </Grid> \r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport InputBase from '../InputBase';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var light = theme.palette.type === 'light';\n  var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      'label + &': {\n        marginTop: 16\n      }\n    },\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if color secondary. */\n    colorSecondary: {\n      '&$underline:after': {\n        borderBottomColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the root element if `disableUnderline={false}`. */\n    underline: {\n      '&:after': {\n        borderBottom: \"2px solid \".concat(theme.palette.primary.main),\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\"',\n        position: 'absolute',\n        right: 0,\n        transform: 'scaleX(0)',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shorter,\n          easing: theme.transitions.easing.easeOut\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&$focused:after': {\n        transform: 'scaleX(1)'\n      },\n      '&$error:after': {\n        borderBottomColor: theme.palette.error.main,\n        transform: 'scaleX(1)' // error is always underlined in red\n\n      },\n      '&:before': {\n        borderBottom: \"1px solid \".concat(bottomLineColor),\n        left: 0,\n        bottom: 0,\n        // Doing the other way around crash on IE 11 \"''\" https://github.com/cssinjs/jss/issues/242\n        content: '\"\\\\00a0\"',\n        position: 'absolute',\n        right: 0,\n        transition: theme.transitions.create('border-bottom-color', {\n          duration: theme.transitions.duration.shorter\n        }),\n        pointerEvents: 'none' // Transparent to the hover style.\n\n      },\n      '&:hover:not($disabled):before': {\n        borderBottom: \"2px solid \".concat(theme.palette.text.primary),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          borderBottom: \"1px solid \".concat(bottomLineColor)\n        }\n      },\n      '&$disabled:before': {\n        borderBottomStyle: 'dotted'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {},\n\n    /* Styles applied to the `input` element. */\n    input: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {},\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {},\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {}\n  };\n};\nvar Input = /*#__PURE__*/React.forwardRef(function Input(props, ref) {\n  var disableUnderline = props.disableUnderline,\n      classes = props.classes,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      other = _objectWithoutProperties(props, [\"disableUnderline\", \"classes\", \"fullWidth\", \"inputComponent\", \"multiline\", \"type\"]);\n\n  return /*#__PURE__*/React.createElement(InputBase, _extends({\n    classes: _extends({}, classes, {\n      root: clsx(classes.root, !disableUnderline && classes.underline),\n      underline: null\n    }),\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Input.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the input will not have an underline.\n   */\n  disableUnderline: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nInput.muiName = 'Input';\nexport default withStyles(styles, {\n  name: 'MuiInput'\n})(Input);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function WarningDialog({open,\n                                       onClose,\n                                       title,\n                                       contentText=[],\n                                       })\n        {\n        return (\n            <React.Fragment>\n                <Dialog\n                  open={open}\n                  onClose={onClose}\n                  aria-labelledby=\"alert-dialog-slide-title\"\n                  aria-describedby=\"alert-dialog-slide-description\">\n                  <DialogTitle id=\"alert-dialog-slide-title\">\n                      {title}\n                  </DialogTitle>\n                  <Divider />\n                  <DialogContent>\n                    {contentText.map((text)=>(\n                      <DialogContentText id=\"alert-dialog-slide-description\">\n                        {text}\n                      </DialogContentText>\n                    ))}\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={onClose} color=\"primary\">\n                      Close\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n            </React.Fragment>\n)\n}\n","export const validateEmail = (email) => {\n  const regex = /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/\n  return regex.test(email)\n};\n\nexport const validatePassword = (password, username) => {\n  //At least: 1 uppercase, 1 lowercase, 1 number, 1 special including _, length between 8 and 64\n  const regex = /^(?=.*[a-zñ])(?=.*[A-ZÑ])(?=.*\\d)(?=.*[@$!%*?&_])[A-Za-zñÑ\\d@$!%*?&_]{8,64}$/;\n  \n  //Password must not include username\n  const notInclude = !password.includes(username);\n  return regex.test(password) && notInclude;\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);"],"sourceRoot":""}